version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: 
      context: ./backend/api-gateway
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      - eureka-server
      - redis
    networks:
      - automed-network
    volumes:
      - ./backend/api-gateway:/app
      - /app/build

  # Service Discovery
  eureka-server:
    image: steeltoeoss/eureka-server:latest
    ports:
      - "8761:8761"
    networks:
      - automed-network

  # Core Services
  patient-service:
    build:
      context: ./backend/patient-service
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-patients:5432/patients
      - SPRING_DATASOURCE_USERNAME=automed
      - SPRING_DATASOURCE_PASSWORD=secure_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      - postgres-patients
      - kafka
      - eureka-server
    networks:
      - automed-network
    volumes:
      - ./backend/patient-service:/app
      - /app/build

  hospital-service:
    build:
      context: ./backend/hospital-service
      dockerfile: Dockerfile.dev
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-hospitals:5432/hospitals
      - SPRING_DATASOURCE_USERNAME=automed
      - SPRING_DATASOURCE_PASSWORD=secure_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
    depends_on:
      - postgres-hospitals
      - kafka
      - eureka-server
    networks:
      - automed-network
    volumes:
      - ./backend/hospital-service:/app
      - /app/build

  consultation-service:
    build:
      context: ./backend/consultation-service
      dockerfile: Dockerfile.dev
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-consultations:5432/consultations
      - SPRING_DATASOURCE_USERNAME=automed
      - SPRING_DATASOURCE_PASSWORD=secure_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATA_REDIS_HOST=redis
    depends_on:
      - postgres-consultations
      - kafka
      - eureka-server
      - redis
    networks:
      - automed-network
    volumes:
      - ./backend/consultation-service:/app
      - /app/build

  sync-service:
    build:
      context: ./backend/sync-service
      dockerfile: Dockerfile.dev
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATA_REDIS_HOST=redis
    depends_on:
      - kafka
      - eureka-server
      - redis
    networks:
      - automed-network
    volumes:
      - ./backend/sync-service:/app
      - /app/build

  ai-service:
    build:
      context: ./backend/ai-service
      dockerfile: Dockerfile.dev
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATA_REDIS_HOST=redis
    depends_on:
      - kafka
      - eureka-server
      - redis
    networks:
      - automed-network
    volumes:
      - ./backend/ai-service:/app
      - /app/build

  clinical-decision-service:
    build:
      context: ./backend/clinical-decision-service
      dockerfile: Dockerfile.dev
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-clinical:5432/clinical
      - SPRING_DATASOURCE_USERNAME=automed
      - SPRING_DATASOURCE_PASSWORD=secure_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATA_REDIS_HOST=redis
    depends_on:
      - postgres-clinical
      - kafka
      - eureka-server
      - redis
    networks:
      - automed-network
    volumes:
      - ./backend/clinical-decision-service:/app
      - /app/build

  workflow-automation-service:
    build:
      context: ./backend/workflow-automation-service
      dockerfile: Dockerfile.dev
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-workflow:5432/workflow
      - SPRING_DATASOURCE_USERNAME=automed
      - SPRING_DATASOURCE_PASSWORD=secure_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATA_REDIS_HOST=redis
    depends_on:
      - postgres-workflow
      - kafka
      - eureka-server
      - redis
    networks:
      - automed-network
    volumes:
      - ./backend/workflow-automation-service:/app
      - /app/build

  # Databases
  postgres-patients:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: patients
      POSTGRES_USER: automed
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres-patients-data:/var/lib/postgresql/data
      - ./backend/patient-service/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - automed-network

  postgres-hospitals:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: hospitals
      POSTGRES_USER: automed
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres-hospitals-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - automed-network

  postgres-consultations:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: consultations
      POSTGRES_USER: automed
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres-consultations-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - automed-network

  postgres-clinical:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: clinical
      POSTGRES_USER: automed
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres-clinical-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - automed-network

  postgres-workflow:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: workflow
      POSTGRES_USER: automed
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres-workflow-data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    networks:
      - automed-network

  # Message Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - automed-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - automed-network

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - automed-network

  # Development Tools
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - automed-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8091:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - automed-network

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8092:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@automed.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - automed-network

volumes:
  postgres-patients-data:
  postgres-hospitals-data:
  postgres-consultations-data:
  postgres-clinical-data:
  postgres-workflow-data:
  redis-data:
  pgadmin-data:

networks:
  automed-network:
    driver: bridge